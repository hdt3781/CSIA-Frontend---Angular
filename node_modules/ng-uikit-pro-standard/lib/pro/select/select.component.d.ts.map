{"version":3,"file":"select.component.d.ts","sources":["select.component.d.ts"],"names":[],"mappingssourcesContent":["import { ViewContainerRef, ElementRef, TemplateRef, EventEmitter, QueryList, AfterContentInit, OnDestroy, OnInit, ChangeDetectorRef, Renderer2 } from '@angular/core';\nimport { OptionComponent } from '../option/option.component';\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\nimport { OptionGroupComponent } from '../option/option-group.component';\nimport { SelectAllOptionComponent } from '../option/select-all-option';\nimport { Overlay, ViewportRuler } from '@angular/cdk/overlay';\nimport { MdbSelectFilterComponent } from './select-filter.component';\nexport declare class MdbSelectComponent implements OnInit, OnDestroy, AfterContentInit, ControlValueAccessor {\n    private _overlay;\n    private _viewportRuler;\n    private _vcr;\n    private _cdRef;\n    private _renderer;\n    ngControl: NgControl;\n    private _selectWrapper;\n    private _selectValue;\n    _dropdownTemplate: TemplateRef<any>;\n    dropdown: ElementRef;\n    filter: MdbSelectFilterComponent;\n    private _optionsWrapper;\n    _customContent: ElementRef;\n    selectAllOption: SelectAllOptionComponent;\n    options: QueryList<OptionComponent>;\n    optionGroups: QueryList<OptionGroupComponent>;\n    allowClear: boolean;\n    clearButtonTabindex: number;\n    disabled: boolean;\n    dropdownClass: string;\n    highlightFirst: boolean;\n    label: string;\n    multiple: boolean;\n    notFoundMsg: string;\n    outline: boolean;\n    placeholder: string;\n    tabindex: number;\n    required: boolean;\n    ariaLabel: string;\n    ariaLabelledby: string;\n    get visibleOptions(): number;\n    set visibleOptions(value: number);\n    private _visibleOptions;\n    get optionHeight(): any;\n    set optionHeight(value: any);\n    private _optionHeight;\n    get dropdownHeight(): number;\n    set dropdownHeight(value: number);\n    protected _dropdownHeight: number;\n    get value(): any;\n    set value(newValue: any);\n    private _value;\n    get compareWith(): (o1: any, o2: any) => boolean;\n    set compareWith(fn: (o1: any, o2: any) => boolean);\n    sortComparator: (a: OptionComponent, b: OptionComponent, options: OptionComponent[]) => number;\n    readonly valueChange: EventEmitter<any>;\n    opened: EventEmitter<any>;\n    closed: EventEmitter<any>;\n    selected: EventEmitter<OptionComponent>;\n    deselected: EventEmitter<OptionComponent | OptionComponent[]>;\n    noOptionsFound: EventEmitter<string>;\n    get activeOption(): OptionComponent | null;\n    get selectionView(): string;\n    get hasSelection(): boolean;\n    get allChecked(): boolean;\n    private _keyManager;\n    private _overlayRef;\n    private _portal;\n    private _selectionModel;\n    previousSelectedValues: any;\n    private _destroy;\n    _isOpen: boolean;\n    _hasFocus: boolean;\n    _labelActive: boolean;\n    _showNoResultsMsg: boolean;\n    private _selectAllChecked;\n    private _compareWith;\n    handleKeydown(event: any): void;\n    get select(): boolean;\n    get isOutline(): boolean;\n    get isMultiselectable(): boolean;\n    get hasPopup(): boolean;\n    get isDisabled(): boolean;\n    get isExpanded(): boolean;\n    get role(): \"combobox\" | \"listbox\";\n    constructor(_overlay: Overlay, _viewportRuler: ViewportRuler, _vcr: ViewContainerRef, _cdRef: ChangeDetectorRef, _renderer: Renderer2, ngControl: NgControl);\n    ngAfterContentInit(): void;\n    restoreMultipleOptions(): void;\n    private _initKeyManager;\n    private _listenToOptionClick;\n    private _listenToSelectAllClick;\n    private _updateValue;\n    private _handleOptionClick;\n    private _handleSingleSelection;\n    private _handleMultipleSelection;\n    private _setSelection;\n    private _selectByValue;\n    private _setInitialValue;\n    onSelectAll(selectAlloption: SelectAllOptionComponent): void;\n    open(): void;\n    private _sortValues;\n    private _listenToOutSideCick;\n    private _getOverlayPosition;\n    private _getPositions;\n    close(): void;\n    toggle(): void;\n    private _updateLabeLPosition;\n    get hasSelected(): boolean;\n    private _scrollToOption;\n    private _getNumberOfGroupsBeforeOption;\n    handleSelectionClear(event: MouseEvent): void;\n    private _handleOpenKeydown;\n    private _handleClosedKeydown;\n    handleOptionsWheel(event: any): void;\n    private _focus;\n    private _highlightFirstOption;\n    onFocus(): void;\n    onBlur(): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    /** ControlValueAccessor interface methods. **/\n    private _onChange;\n    private _onTouched;\n    writeValue(value: any): void;\n    setDisabledState(isDisabled: boolean): void;\n    registerOnChange(fn: (_: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n}\n"]}