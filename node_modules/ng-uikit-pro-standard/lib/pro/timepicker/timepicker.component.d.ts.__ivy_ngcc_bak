import { ViewContainerRef, EventEmitter, OnDestroy } from '@angular/core';
import { Overlay } from '@angular/cdk/overlay';
import { ClearButton, Rounding, SelectedTime, CloseButton } from './timepicker.interface';
import { Subject } from 'rxjs';
export declare class MdbTimePickerComponent implements OnDestroy {
    private _overlay;
    private _vcr;
    autoClose: boolean;
    clearButton: ClearButton;
    closeButton: CloseButton;
    max: string;
    min: string;
    okButton: string;
    rounding: Rounding;
    twelveHour: boolean;
    timeChange: EventEmitter<object>;
    cancel: EventEmitter<object>;
    done: EventEmitter<object>;
    show: EventEmitter<object>;
    private _value;
    private _contentRef;
    private _overlayRef;
    private _portal;
    input: any;
    _selectionChange$: Subject<string>;
    constructor(_overlay: Overlay, _vcr: ViewContainerRef);
    protected _patchInputValues(): void;
    protected _timeToObj(time: any): SelectedTime;
    open(): void;
    close(doneClicked?: boolean, value?: SelectedTime): void;
    _emitTimeChangeEvent(value: SelectedTime): void;
    _emitTimeCancelEvent(value: SelectedTime): void;
    _emitTimeDoneEvent(value: SelectedTime): void;
    _emitTimeShowEvent(value: SelectedTime): void;
    _setValue(value: string): void;
    setInput(input: any): void;
    onChangeCb: (_: any) => void;
    onTouchedCb: () => void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    private _getOverlayConfig;
    private _destroyOverlay;
    private _listenToOutsideClick;
    ngOnDestroy(): void;
}
